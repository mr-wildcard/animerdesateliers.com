{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "scopeName": "source.tasl",
  "name": "tasl",
  "fileTypes": ["tasl"],
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#namespace"
    },
    {
      "include": "#type"
    },
    {
      "include": "#class"
    },
    {
      "include": "#edge"
    }
  ],
  "repository": {
    "comment": {
      "match": "(#).*$",
      "name": "comment.line.number-sign.tasl",
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.tasl"
        }
      }
    },
    "namespace": {
      "match": "(?:^\\s*)(namespace\\b)(.*)",
      "captures": {
        "1": {
          "name": "keyword.control.tasl.namespace"
        },
        "2": {
          "patterns": [
            {
              "include": "#comment"
            },
            {
              "include": "#namespaceURI"
            },
            {
              "match": "[a-zA-Z][a-zA-Z0-9]*\\b",
              "name": "entity.name"
            }
          ]
        }
      }
    },
    "type": {
      "begin": "(?:^\\s*)(type\\b)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.tasl.type"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "class": {
      "begin": "(?:^\\s*)(class\\b)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.tasl.class"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#term"
        },
        {
          "include": "#export"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "edge": {
      "begin": "(?:^\\s*)(edge\\b)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.tasl.edge"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#term"
        },
        {
          "include": "#export"
        },
        {
          "match": "=/",
          "name": "punctuation.separator.tasl.edge.source"
        },
        {
          "match": "/=>",
          "name": "punctuation.separator.tasl.edge.target"
        },
        {
          "match": "=>",
          "name": "punctuation.separator.tasl.edge"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "export": {
      "match": "::",
      "name": "keyword.operator.tasl.export"
    },
    "expression": {
      "patterns": [
        {
          "include": "#literal"
        },
        {
          "include": "#uri"
        },
        {
          "include": "#product"
        },
        {
          "include": "#coproduct"
        },
        {
          "include": "#reference"
        },
        {
          "include": "#optional"
        },
        {
          "include": "#variable"
        }
      ]
    },
    "literal": {
      "patterns": [
        {
          "include": "#term"
        }
      ]
    },
    "uri": {
      "match": "<>",
      "name": "constant.language.tasl.uri"
    },
    "product": {
      "begin": "{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.block.tasl.product"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.block.tasl.product"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#term"
        },
        {
          "match": "->",
          "name": "punctuation.separator.tasl.component"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "coproduct": {
      "begin": "\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.block.tasl.coproduct"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.block.tasl.coproduct"
        }
      },
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#term"
        },
        {
          "match": "<-",
          "name": "punctuation.separator.tasl.option"
        },
        {
          "include": "#expression"
        }
      ]
    },
    "reference": {
      "match": "(\\*)\\s*(\\S+)",
      "captures": {
        "1": {
          "name": "keyword.operator"
        },
        "2": {
          "patterns": [
            {
              "include": "#term"
            }
          ]
        }
      }
    },
    "variable": {
      "match": "[a-zA-Z][a-zA-Z0-9]*\\b",
      "name": "entity.name.type.tasl.variable"
    },
    "optional": {
      "begin": "(\\?)\\s*",
      "beginCaptures": {
        "1": {
          "name": "keyword.operator"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#expression"
        }
      ]
    },
    "namespaceURI": {
      "match": "[a-z]+:[a-zA-Z0-9-._~:\\/?#\\[\\]@!$&'()*+,;%=]+",
      "name": "markup.underline.link"
    },
    "term": {
      "match": "[a-zA-Z][a-zA-Z0-9]*:(?:[A-Za-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9A-Fa-f]{2})+",
      "name": "entity.name"
    }
  }
}
