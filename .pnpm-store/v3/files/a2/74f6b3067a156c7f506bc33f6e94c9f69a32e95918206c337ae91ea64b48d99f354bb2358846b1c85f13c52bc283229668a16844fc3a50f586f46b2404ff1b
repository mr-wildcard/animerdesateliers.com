import {existsSync} from "fs";
import getPort from "get-port";
import * as colors from "kleur/colors";
import path from "path";
import {pathToFileURL} from "url";
import {z} from "zod";
import {addTrailingSlash} from "./util.js";
const AstroConfigSchema = z.object({
  projectRoot: z.string().optional().default(".").transform((val) => new URL(val)),
  src: z.string().optional().default("./src").transform((val) => new URL(val)),
  pages: z.string().optional().default("./src/pages").transform((val) => new URL(val)),
  public: z.string().optional().default("./public").transform((val) => new URL(val)),
  dist: z.string().optional().default("./dist").transform((val) => new URL(val)),
  renderers: z.array(z.string()).optional().default(["@astrojs/renderer-svelte", "@astrojs/renderer-vue", "@astrojs/renderer-react", "@astrojs/renderer-preact"]),
  markdownOptions: z.object({
    footnotes: z.boolean().optional(),
    gfm: z.boolean().optional(),
    remarkPlugins: z.array(z.any()).optional(),
    rehypePlugins: z.array(z.any()).optional()
  }).optional().default({}),
  buildOptions: z.object({
    site: z.string().optional(),
    sitemap: z.boolean().optional().default(true),
    pageUrlFormat: z.union([z.literal("file"), z.literal("directory")]).optional().default("directory")
  }).optional().default({}),
  devOptions: z.object({
    hostname: z.string().optional().default("localhost"),
    port: z.number().optional().transform((val) => val || getPort({port: getPort.makeRange(3e3, 3050)})),
    tailwindConfig: z.string().optional(),
    trailingSlash: z.union([z.literal("always"), z.literal("never"), z.literal("ignore")]).optional().default("ignore")
  }).optional().default({})
});
async function validateConfig(userConfig, root) {
  const fileProtocolRoot = pathToFileURL(root + path.sep);
  const AstroConfigRelativeSchema = AstroConfigSchema.extend({
    projectRoot: z.string().default(".").transform((val) => new URL(addTrailingSlash(val), fileProtocolRoot)),
    src: z.string().default("./src").transform((val) => new URL(addTrailingSlash(val), fileProtocolRoot)),
    pages: z.string().default("./src/pages").transform((val) => new URL(addTrailingSlash(val), fileProtocolRoot)),
    public: z.string().default("./public").transform((val) => new URL(addTrailingSlash(val), fileProtocolRoot)),
    dist: z.string().default("./dist").transform((val) => new URL(addTrailingSlash(val), fileProtocolRoot))
  });
  return AstroConfigRelativeSchema.parseAsync(userConfig);
}
async function loadConfig(rawRoot, configFileName = "astro.config.mjs") {
  const root = rawRoot ? path.resolve(rawRoot) : process.cwd();
  const astroConfigPath = new URL(`./${configFileName}`, `file://${root}/`);
  let userConfig = {};
  if (existsSync(astroConfigPath)) {
    userConfig = (await import(astroConfigPath.href)).default;
  }
  return validateConfig(userConfig, root);
}
function formatConfigError(err) {
  const errorList = err.issues.map((issue) => `  ! ${colors.bold(issue.path.join("."))}  ${colors.red(issue.message + ".")}`);
  return `${colors.red("[config]")} Astro found issue(s) with your configuration:
${errorList.join("\n")}`;
}
export {
  AstroConfigSchema,
  formatConfigError,
  loadConfig,
  validateConfig
};
//# sourceMappingURL=data:application/json;base64,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
